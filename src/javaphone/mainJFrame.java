package javaphone;

//import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
//import javax.swing.Icon;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author bafc13
 */
public class mainJFrame extends javax.swing.JFrame {

    // TODO: some kind of event listener handle_dm(Boolean is_sender, Socket sock, String msg)
    // To write messages to db and show on screen

     DBManager db;
     MainSocket mainSock;

     private String ip;
     private String nick;
     private JLabel resultLabel;


    /**
     * Creates new form mainJFrame
     */
    public mainJFrame() throws IOException {
        initComponents();
        this.setTitle("JavaPhone");
//        ImageIcon imageIcon = new ImageIcon("src/");
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setVisible(true);


        db = new DBManager();
        mainSock = new MainSocket();
        mainSock.start();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        friendPanel = new javax.swing.JScrollPane();
        connectionPanel = new javax.swing.JPanel();
        connectButton = new javax.swing.JButton();
        createInterfaceButton = new javax.swing.JButton();
        serverScrollPanel = new javax.swing.JScrollPane();
        serverPanel = new javax.swing.JPanel();
        serverButton1 = new javax.swing.JButton();
        serverButton2 = new javax.swing.JButton();
        serverButton3 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        chatPannel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jToolBar1 = new javax.swing.JToolBar();
        settingsButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenuItem1.setText("jMenuItem1");

        jMenu3.setText("jMenu3");

        jMenu4.setText("jMenu4");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1600, 900));

        connectButton.setBackground(new java.awt.Color(204, 204, 255));
        connectButton.setText("connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        createInterfaceButton.setBackground(new java.awt.Color(204, 204, 255));
        createInterfaceButton.setText("create conference");
        createInterfaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createInterfaceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout connectionPanelLayout = new javax.swing.GroupLayout(connectionPanel);
        connectionPanel.setLayout(connectionPanelLayout);
        connectionPanelLayout.setHorizontalGroup(
            connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectionPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(createInterfaceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        connectionPanelLayout.setVerticalGroup(
            connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectButton)
                    .addComponent(createInterfaceButton))
                .addContainerGap())
        );

        friendPanel.setViewportView(connectionPanel);

        serverPanel.setPreferredSize(new java.awt.Dimension(600, 111));

        serverButton1.setText("study server");
        serverButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        serverButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/image2.png"))); // NOI18N
        serverButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                serverButton1MouseReleased(evt);
            }
        });
        serverButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverButton1ActionPerformed(evt);
            }
        });

        serverButton2.setText("chill server");
        serverButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        serverButton2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/image1.png"))); // NOI18N
        serverButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverButton2ActionPerformed(evt);
            }
        });

        serverButton3.setText("gaming server");
        serverButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        serverButton3.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/image0.png"))); // NOI18N
        serverButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout serverPanelLayout = new javax.swing.GroupLayout(serverPanel);
        serverPanel.setLayout(serverPanelLayout);
        serverPanelLayout.setHorizontalGroup(
            serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serverButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                    .addComponent(serverButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(serverButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        serverPanelLayout.setVerticalGroup(
            serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serverPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serverButton1)
                .addGap(18, 18, 18)
                .addComponent(serverButton2)
                .addGap(18, 18, 18)
                .addComponent(serverButton3)
                .addGap(0, 0, 0))
        );

        serverScrollPanel.setViewportView(serverPanel);

        jButton3.setText("jButton3");

        jButton1.setText("jButton1");

        jButton4.setText("jButton4");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setMaximumSize(new java.awt.Dimension(212, 84));
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chatPannelLayout = new javax.swing.GroupLayout(chatPannel);
        chatPannel.setLayout(chatPannelLayout);
        chatPannelLayout.setHorizontalGroup(
            chatPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        chatPannelLayout.setVerticalGroup(
            chatPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chatPannelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jToolBar1.setRollover(true);

        settingsButton.setText("settings");
        settingsButton.setFocusable(false);
        settingsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        settingsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(settingsButton);

        exitButton.setText("exit");
        exitButton.setFocusable(false);
        exitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(exitButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serverScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(friendPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addComponent(chatPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(serverScrollPanel)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(friendPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chatPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createInterfaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createInterfaceButtonActionPerformed

        resultLabel = new JLabel("Данные не введены");
        resultLabel.setHorizontalAlignment(SwingConstants.CENTER);


            CustomDialog dialog = new CustomDialog(this);
            dialog.setVisible(true);

            // После закрытия диалога получаем данные
            ip = dialog.getField1Value();
            nick = dialog.getField2Value();
            
            mainSock.call(ip, nick, CallCodes.dm);

            // Обновляем интерфейс
            System.out.println("huy" + ip + "chlen" + nick);
        // TODO add your handling code here:
    }//GEN-LAST:event_createInterfaceButtonActionPerformed

    class CustomDialog extends JDialog {
    private JTextField field1;
    private JTextField field2;

    public CustomDialog(JFrame parent) {
        super(parent, "Ввод данных", true); // Модальное окно
        setLayout(new GridLayout(3, 2, 5, 5));
        setSize(300, 150);
        setLocationRelativeTo(parent);

        // Создаем компоненты
        JLabel label1 = new JLabel("Поле 1:");
        JLabel label2 = new JLabel("Поле 2:");
        field1 = new JTextField();
        field2 = new JTextField();
        JButton okButton = new JButton("OK");

        // Добавляем обработчик кнопки
        okButton.addActionListener(e -> dispose());

        // Добавляем компоненты на форму
        add(label1);
        add(field1);
        add(label2);
        add(field2);
        add(new JLabel()); // Пустая ячейка
        add(okButton);
    }

    // Геттеры для получения значений
    public String getField1Value() {
        return field1.getText();
    }

    public String getField2Value() {
        return field2.getText();
    }
}

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
         try {
             // TODO add your handling code here:
//        if(serverPanel.)
            CallFrame cf = new CallFrame();
//            cf.setExtendedState(JFrame.MAXIMIZED_BOTH);
         } catch (IOException ex) {
             Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_connectButtonActionPerformed

    private void serverButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverButton1ActionPerformed
        // TODO add your handling code here:
//        JOptionPane.showMessageDialog(null, "Connecting...", "InfoBox:", JOptionPane.INFORMATION_MESSAGE);
//        JTextField jt = new JTextField();
//        jt.setText("198.9.1.2:2888     Erjan228");

//        connectionPanel.add(jt);
    }//GEN-LAST:event_serverButton1ActionPerformed

    private void serverButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverButton2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Connecting...", "InfoBox:", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_serverButton2ActionPerformed

    private void serverButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverButton3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Connecting...", "InfoBox:", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_serverButton3ActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void serverButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serverButton1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_serverButton1MouseReleased
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new mainJFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel chatPannel;
    private javax.swing.JButton connectButton;
    private javax.swing.JPanel connectionPanel;
    private javax.swing.JButton createInterfaceButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JScrollPane friendPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton serverButton1;
    private javax.swing.JButton serverButton2;
    private javax.swing.JButton serverButton3;
    private javax.swing.JPanel serverPanel;
    private javax.swing.JScrollPane serverScrollPanel;
    private javax.swing.JButton settingsButton;
    // End of variables declaration//GEN-END:variables
}


//JButton button = new JButton("Нажми меня");

        // Добавляем обработчик нажатия
//        button.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                // Устанавливаем фокус на кнопку после нажатия
//                button.requestFocusInWindow();
//            }
//        });

//сервера можно реализовать так:
//первый кто сервера типо есть в закрепе, то есть можно по нажатии открыть сервак и порт на этом конкретно адресе,
//но они не захосчены
//
//первый кто тыкает зайти - является хостом сервака и к нему уже все подключаются
//
//остальным при наведении на сервак - показывается что сервак активен, на нем кто то уже сидит, показывается всё на уровне просто адрессов
//и они уже могут подключаться напрямую туда, на сервак, на раздачу аудио, епта
//
//это звучит как ауе, так у нас и получится реализовать серваки, как в дискорде, с названиями и прочей шелухой
//
//они просто изначально будут забиты с названиями и всё
//
//справа в панели будут показаны участники
//
//
//также надо будет создавать в mainJFrame объектъ сервера, ибо надо иметь информацию о пользователях подключенных к серверу
//
//наведение на друга, кнопка невероятная подключения к чату, отдельное окошко уже в звонке с интерфейсами, с чатиком...