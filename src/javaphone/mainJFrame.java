package javaphone;

import java.awt.Font;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaphone.EventInterfaces.CallResultHandler;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author bafc13
 */
public class mainJFrame extends javax.swing.JFrame implements CallResultHandler {

    public static DBManager db;
    public static MainSocket mainSock;
    public static BasicCallHandler basicCallHandler;

    private String ip;
    private String nick;
    private JLabel resultLabel;
    public static String username;
    
    public static List<FriendPanel> friendsList;

    /**
     * Creates new form mainJFrame
     */
    public mainJFrame() throws IOException {
        initComponents();
        this.setTitle("JavaPhone");
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setVisible(true);

        try {
            BufferedReader accr = new BufferedReader(new FileReader("./account.txt"));
            username = accr.readLine().trim();
            accr.close();
        } catch (Exception e) {
            try {
                SettingsFrame sf = new SettingsFrame();
            } catch (IOException ex) {
                Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        friendsList = new ArrayList<>();
        
        db = new DBManager();
        mainSock = new MainSocket();
        basicCallHandler = new BasicCallHandler();
        mainSock.start();
        mainSock.addListener(db);
        mainSock.addListener(basicCallHandler);
        
        db.setUsername("localhost", username);

        basicCallHandler.addListener(this);

        inputChatField.setFont(new Font("Arial Unicode MS", Font.PLAIN, 18));
        inputChatField.addActionListener(e -> messageWritten());

        mainChatArea.setEditable(false);
        mainChatArea.setFont(new Font("Arial Unicode MS", Font.BOLD, 16));
        mainChatArea.setLineWrap(true);
        mainChatArea.setWrapStyleWord(true);
        chatPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        chatPane.setBorder(new RoundedBorder(3));

        mainChatArea.setBorder(new RoundedBorder(3));
        inputChatField.setBorder(new RoundedBorder(3));
        serverPanel.setBorder(new RoundedBorder(3));
        serverPanel.setLayout(new BoxLayout(serverPanel, BoxLayout.Y_AXIS));
        connectionPanel.setBorder(new RoundedBorder(3));
        
        initFriends();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        friendPanel = new javax.swing.JScrollPane();
        connectionPanel = new javax.swing.JPanel();
        connectButton = new javax.swing.JButton();
        createConferenceButton = new javax.swing.JButton();
        serverScrollPanel = new javax.swing.JScrollPane();
        serverPanel = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        chatPannel = new javax.swing.JPanel();
        inputChatField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        chatPane = new javax.swing.JScrollPane();
        mainChatArea = new javax.swing.JTextArea();
        jToolBar1 = new javax.swing.JToolBar();
        settingsButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenuItem1.setText("jMenuItem1");

        jMenu3.setText("jMenu3");

        jMenu4.setText("jMenu4");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1600, 900));

        connectButton.setBackground(new java.awt.Color(204, 204, 255));
        connectButton.setText("connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        createConferenceButton.setBackground(new java.awt.Color(204, 204, 255));
        createConferenceButton.setText("create conference");
        createConferenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createConferenceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout connectionPanelLayout = new javax.swing.GroupLayout(connectionPanel);
        connectionPanel.setLayout(connectionPanelLayout);
        connectionPanelLayout.setHorizontalGroup(
            connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectionPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(createConferenceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        connectionPanelLayout.setVerticalGroup(
            connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectButton)
                    .addComponent(createConferenceButton))
                .addContainerGap())
        );

        friendPanel.setViewportView(connectionPanel);

        serverPanel.setPreferredSize(new java.awt.Dimension(600, 111));

        javax.swing.GroupLayout serverPanelLayout = new javax.swing.GroupLayout(serverPanel);
        serverPanel.setLayout(serverPanelLayout);
        serverPanelLayout.setHorizontalGroup(
            serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 651, Short.MAX_VALUE)
        );
        serverPanelLayout.setVerticalGroup(
            serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 535, Short.MAX_VALUE)
        );

        serverScrollPanel.setViewportView(serverPanel);

        jButton3.setText("jButton3");

        jButton1.setText("jButton1");

        jButton4.setText("jButton4");

        inputChatField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputChatFieldActionPerformed(evt);
            }
        });

        mainChatArea.setColumns(20);
        mainChatArea.setRows(5);
        mainChatArea.setMaximumSize(new java.awt.Dimension(212, 84));
        chatPane.setViewportView(mainChatArea);

        jScrollPane2.setViewportView(chatPane);

        javax.swing.GroupLayout chatPannelLayout = new javax.swing.GroupLayout(chatPannel);
        chatPannel.setLayout(chatPannelLayout);
        chatPannelLayout.setHorizontalGroup(
            chatPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inputChatField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        chatPannelLayout.setVerticalGroup(
            chatPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chatPannelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputChatField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jToolBar1.setRollover(true);

        settingsButton.setText("settings");
        settingsButton.setFocusable(false);
        settingsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        settingsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(settingsButton);

        exitButton.setText("exit");
        exitButton.setFocusable(false);
        exitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(exitButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serverScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(friendPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                    .addComponent(chatPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(serverScrollPanel)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(friendPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                        .addGap(5, 5, 5)
                        .addComponent(chatPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createConferenceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createConferenceButtonActionPerformed
        mainSock.call(ip, nick, CallCodes.callDM);
    }//GEN-LAST:event_createConferenceButtonActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        resultLabel = new JLabel("Данные не введены");
        resultLabel.setHorizontalAlignment(SwingConstants.CENTER);

        CustomDialog dialog = new CustomDialog(this);
        dialog.setVisible(true);

        ip = dialog.getField1Value();
        nick = dialog.getField2Value();

        if (ip.equals("CLOSE") && nick.equals("OPER")) {
            System.out.println("HUY BLYAT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        } else if (!ip.equals("") && !nick.equals("")) {
            System.out.println("\nhuy " + ip + " chlen " + nick + "\n");
            mainSock.call(ip, username, CallCodes.callDM);
        } else {
            mainSock.call(ip, username, CallCodes.callDM);
        }
    }//GEN-LAST:event_connectButtonActionPerformed

    private void serverButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverButton1ActionPerformed

    }//GEN-LAST:event_serverButton1ActionPerformed

    private void serverButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverButton2ActionPerformed


    }//GEN-LAST:event_serverButton2ActionPerformed

    private void serverButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverButton3ActionPerformed


    }//GEN-LAST:event_serverButton3ActionPerformed


    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_exitButtonActionPerformed

    private void inputChatFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputChatFieldActionPerformed


    }//GEN-LAST:event_inputChatFieldActionPerformed

    private void messageWritten() {
        if (inputChatField.getText() != "") {
            mainChatArea.append(inputChatField.getText() + "\n");
            inputChatField.setText("");
        }
    }


    private void serverButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serverButton1MouseReleased


    }//GEN-LAST:event_serverButton1MouseReleased

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        try {
            SettingsFrame sf = new SettingsFrame();
        } catch (IOException ex) {
            Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_settingsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new mainJFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void addFriend(String ip, String username) {
        FriendPanel fpanel = new FriendPanel(ip, username);
        
        friendsList.add(fpanel);
        
        serverPanel.add(fpanel);
        serverPanel.add(Box.createVerticalStrut(13));
    }
    
    private void initFriends() {
        List<HashMap<String, String>> friends = db.getFriends();
        for (HashMap<String, String> friend : friends) {
            if (!friend.get("ip").contains("localhost")) {
                addFriend(friend.get("ip"), friend.get("name"));
            }
        }
        
        for (HashMap<String, String> friend : friends) {
            if (!friend.get("ip").contains("localhost")) {
                mainSock.call(friend.get("ip"), username, CallCodes.callPing);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane chatPane;
    private javax.swing.JPanel chatPannel;
    private javax.swing.JButton connectButton;
    private javax.swing.JPanel connectionPanel;
    private javax.swing.JButton createConferenceButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JScrollPane friendPanel;
    private javax.swing.JTextField inputChatField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextArea mainChatArea;
    private javax.swing.JPanel serverPanel;
    private javax.swing.JScrollPane serverScrollPanel;
    private javax.swing.JButton settingsButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void DMCreated(int chatID, DirectMessenger dm) {
        try {
            CallFrame cf = new CallFrame(dm);
        } catch (IOException ex) {
            Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void VoiceCreated(int chatID, VoiceSender vs, VoiceReciever vr) {
    }

    @Override
    public void VideoCreated(int chatID, VideoSender vs, VideoReciever vr) {
    }

    @Override
    public void PingHappened(String address, String username) {
        Boolean found = false;
        
        for (FriendPanel friend : friendsList) {
            if (friend.ip.equals(address)) {
                found = true;
                if (username.equals("")) 
                    friend.refresh(false, false, username);
                else
                    friend.refresh(true, false, username);
            }
        }
        
        if (!found && !username.equals(""))
            addFriend(address, username);
    }
}
